# Default values for restics3bucketbackup.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

image:
  repository: quay.io/galexrt/restic-sftp
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

restartPolicy: OnFailure

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  privileged: true
  runAsUser: 0
  runAsGroup: 0
  runAsNonRoot: false
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

cronjob:
  schedule: "30 4 * * *"
  concurrencyPolicy: Forbid
  successfulJobsHistoryLimit: 2
  failedJobsHistoryLimit: 2
  suspend: false

env: []
# To backup a obc provisioned bucket (claim, called mybucket) of an internal Rook Ceph RGW
# instance (without https), don#t forget to remove the brackets when uncommenting this section
#  - name: S3_PROTOCOL
#    value: "http"
#  - name: S3FS_AWS_ACCESS_KEY_ID
#    valueFrom:
#      secretKeyRef:
#        name: mybucket-bkt
#        key: AWS_ACCESS_KEY_ID
#  - name: S3FS_AWS_SECRET_ACCESS_KEY
#    valueFrom:
#      secretKeyRef:
#        name: mybucket-bkt
#        key: AWS_SECRET_ACCESS_KEY
#  - name: S3FS_BUCKET_NAME
#    valueFrom:
#      configMapKeyRef:
#        name: mybucket-bkt
#        key: BUCKET_NAME
envFrom: []
# To backup a obc provisioned bucket (claim, called mybucket) of an internal Rook Ceph RGW
# instance (without https), don't forget to remove the brackets when uncommenting this section
#  - configMapRef:
#      name: mybucket-bkt

volumeMounts: []
volumes: []

# Directory to backup inside the CronJob (BACKUP_TARGET)
backupDir: /data

# Bucket to backup using restic
s3fs:
  # If s3fs should be used to mount a bucket to the `backupDir`
  enabled: true
  # Setting this to "obc" will cause the ObjectBucketClaim ConfigMap and Secret
  # vars to be used to mount a bucket (e.g., BUCKET_HOST, BUCKET_PORT, BUCKET_NAME, etc)
  mountMode: "obc"
  # s3fs flags (e.g., `-o use_path_request_style`)
  flags: ""
  # S3FS_AWS_ACCESS_KEY_ID
  accessKey:
  # S3FS_AWS_SECRET_ACCESS_KEY
  secretKey:
  # If you are not mounting OBC created ConfigMap and Secret, specify the bucket name
  bucketName: ""

# Restic target
restic:
  excludes: |
    /data/example123/**
  # Type: s3 or sftp
  repositoryType: s3
  # If empty you should provide it through `envFrom` named `RESTIC_REPOSITORY`
  repository: ""
  # `RESTIC_PASSWORD` when set a secret for it will be created
  password: ""
  # If a custom hostname should be used for the `restic backup` command
  hostname: ""
  # Custom backup flags (env var: RESTIC_BACKUP_FLAGS)
  backupFlags: "--exclude-file=/restic-excludes/excludes"
  # S3
  s3:
    # AWS_ACCESS_KEY_ID
    accessKey:
    # AWS_SECRET_ACCESS_KEY
    secretKey:
  # SFTP secret options
  sftp:
    # An existing Secret must contain a `config` and `id_rsa` key
    existingSecret: ""
    # Specify a custom ssh config to mount, this is not the best example due to the ignored host key
    config: |
      Host *
      Port 22
      StrictHostKeyChecking no
      UserKnownHostsFile /dev/null
      IdentityFile ~/.ssh/id_rsa
    # Make sure you are using a safe mechanism to store the values.yaml file with a private key inside
    id_rsa: |
      YOUR_SSH_PRIVATE_KEY
